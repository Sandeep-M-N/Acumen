"""Add query module tables

Revision ID: 686fc5869be2
Revises: 79b07a9239f2
Create Date: 2025-09-08 15:25:46.933355

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '686fc5869be2'
down_revision: Union[str, None] = '79b07a9239f2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('QueryModule',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.String(length=100), nullable=False),
    sa.Column('Status', sa.Boolean(), server_default='1', nullable=False),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('QueryCategory',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ModuleId', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=100), nullable=False),
    sa.Column('LBCAT', sa.String(length=50), nullable=True),
    sa.Column('Status', sa.Boolean(), server_default='1', nullable=False),
    sa.ForeignKeyConstraint(['ModuleId'], ['QueryModule.Id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('LabAnalytes',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('CategoryId', sa.Integer(), nullable=False),
    sa.Column('LabTest', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['CategoryId'], ['QueryCategory.Id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('PredefinedQuery',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('CategoryId', sa.Integer(), nullable=False),
    sa.Column('TemplateText', sa.Text(), nullable=False),
    sa.Column('DatasetType', sa.String(length=50), nullable=True),
    sa.Column('TablesInvolved', sa.String(length=200), nullable=True),
    sa.Column('QueryType', sa.String(length=100), nullable=True),
    sa.Column('Status', sa.Boolean(), server_default='1', nullable=False),
    sa.ForeignKeyConstraint(['CategoryId'], ['QueryCategory.Id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('QueryPlaceholder',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('QueryId', sa.Integer(), nullable=False),
    sa.Column('PlaceholderText', sa.String(length=100), nullable=False),
    sa.Column('InputType', sa.String(length=50), nullable=False),
    sa.Column('SourceTable', sa.String(length=50), nullable=True),
    sa.Column('SourceColumn', sa.String(length=50), nullable=True),
    sa.Column('CategoryFilter', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CategoryFilter'], ['QueryCategory.Id'], ),
    sa.ForeignKeyConstraint(['QueryId'], ['PredefinedQuery.Id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('Id')
    )
    op.execute("""
        INSERT INTO QueryModule (Name, Status) VALUES
        ('Lab Results', 1),
        ('Medications', 0),
        ('Procedures', 0);
       
        INSERT INTO QueryCategory (ModuleId, Name, LBCAT, Status) VALUES
        (1, 'Hematology', 'Hematology', 1),
        (1, 'Liver', 'Chemistry', 1),
        (1, 'Renal', 'Chemistry', 0),
        (1, 'Cardiac', 'Chemistry', 0),
        (1, 'Electrolytes', 'Chemistry', 0),
        (1, 'Coagulation', 'Coagulation', 0),
        (2, 'Concomitant Meds', '', 0),
        (3, 'Procedures', '', 0);
               
        INSERT INTO LabAnalytes (CategoryId, LabTest) VALUES
        (1, '["leukocytes","neutrophils","lymphocytes","hemoglobin","platelets"]'),
       (2, '["alanine aminotransferase","bilirubin","direct bilirubin","aspartate aminotransferase","alkaline phosphatase","albumin","gamma glutamyl transferase"]'),
        (3, '["creatinine","urea","potassium","bicarbonate","uric acid","calcium","phosphorus"]'),
        (4, '["magnesium","potassium","troponin","calcium","creatine kinase","creatine kinase-MB"]'),
        (5, '["sodium","potassium","chloride","bicarbonate","glucose"]'),
        (6, '["activated partial thromboplastin time","prothrombin time","international normalized ratio"]');
       
        INSERT INTO PredefinedQuery (CategoryId, TemplateText, DatasetType, TablesInvolved, QueryType, Status) VALUES
        (1, 'For <subject>, what were the <hematology lab values> most proximal to the start of the <AE> at <YYYY-MM-DD>?', 'SDTM', 'AE,LB', 'at_time', 1),
        (1, 'For <subject>, what were the <hematology lab values> most proximal prior to the <AE> at <YYYY-MM-DD>?', 'SDTM', 'AE,LB', 'prior', 1),
        (1, 'For <subject>, what were the <hematology lab values> during the <AE> at <YYYY-MM-DD> To <YYYY-MM-DD>?', 'SDTM', 'AE,LB', 'during', 1),
        (1, 'For <subject>, what were the <hematology lab values> within <+/- dd> day(s) of the <AE> at <YYYY-MM-DD>?', 'SDTM', 'AE,LB', 'within_days', 1),
        (1, 'For <subject>, what were the <hematology lab values> during the study?', 'SDTM', 'LB', 'study', 1),
        (1, 'For <subject>, graph the following <hematology analytes> during the study.', 'SDTM', 'LB', 'graph', 1),
        (2, 'For <subject>, what were the <liver lab values> most proximal to the start of the <AE> at <YYYY-MM-DD>?', 'SDTM', 'AE,LB', 'at_time', 1),
        (2, 'For <subject>, what were the <liver lab values> most proximal prior to the <AE> at <YYYY-MM-DD>?', 'SDTM', 'AE,LB', 'prior', 1),
        (2, 'For <subject>, what were the <liver lab values> during the <AE> at <YYYY-MM-DD> To <YYYY-MM-DD>?', 'SDTM', 'AE,LB', 'during', 1),
        (2, 'For <subject>, what were the <liver lab values> within <+/- dd> day(s) of the <AE> at <YYYY-MM-DD>?', 'SDTM', 'AE,LB', 'within_days', 1),
        (2, 'For <subject>, what were the <liver lab values> during the study?', 'SDTM', 'LB', 'study', 1),
        (2, 'For <subject>, graph the following <liver analytes> during the study.', 'SDTM', 'LB', 'graph', 1);
               
        INSERT INTO QueryPlaceholder (QueryId, PlaceholderText, InputType, SourceTable, SourceColumn, CategoryFilter) VALUES
        (1, '<subject>', 'single-select', 'AE', 'USUBJID', NULL),
        (1, '<hematology lab values>', 'multi-select', 'LB', 'LBTEST', 1),
        (1, '<AE>', 'single-select', 'AE', 'AEDECOD', NULL),
        (1, '<YYYY-MM-DD>', 'single-select', 'AE', 'AESTDTC', NULL),
 
        (2, '<subject>', 'single-select', 'AE', 'USUBJID', NULL),
        (2, '<hematology lab values>', 'multi-select', 'LB', 'LBTEST', 1),
        (2, '<AE>', 'single-select', 'AE', 'AEDECOD', NULL),
        (2, '<YYYY-MM-DD>', 'single-select', 'AE', 'AESTDTC', NULL),
 
        (3, '<subject>', 'single-select', 'AE', 'USUBJID', NULL),
        (3, '<hematology lab values>', 'multi-select', 'LB', 'LBTEST', 1),
        (3, '<AE>', 'single-select', 'AE', 'AEDECOD', NULL),
        (3, '<YYYY-MM-DD>', 'single-select', 'AE', 'AESTDTC', NULL),
        (3, '<YYYY-MM-DD>', 'auto-select', 'AE', 'AEENDTC', NULL),
 
        (4, '<subject>', 'single-select', 'AE', 'USUBJID', NULL),
        (4, '<hematology lab values>', 'multi-select', 'LB', 'LBTEST', 1),
        (4, '<+/- dd>', 'text-field', 'NULL', 'NULL', NULL),
        (4, '<AE>', 'single-select', 'AE', 'AEDECOD', NULL),
        (4, '<YYYY-MM-DD>', 'single-select', 'AE', 'AESTDTC', NULL),
 
        (5, '<subject>', 'single-select', 'AE', 'USUBJID', NULL),
        (5, '<hematology lab values>', 'single-select', 'LB', 'LBTEST', 1),
 
        (6, '<subject>', 'single-select', 'AE', 'USUBJID', NULL),
        (6, '<hematology lab values>', 'multi-select', 'LB', 'LBTEST', 1),
               
        (7, '<subject>', 'single-select', 'AE', 'USUBJID', NULL),
        (7, '<liver lab values>', 'multi-select', 'LB', 'LBTEST', 1),
        (7, '<AE>', 'single-select', 'AE', 'AEDECOD', NULL),
        (7, '<YYYY-MM-DD>', 'single-select', 'AE', 'AESTDTC', NULL),
 
        (8, '<subject>', 'single-select', 'AE', 'USUBJID', NULL),
        (8, '<liver lab values>', 'multi-select', 'LB', 'LBTEST', 1),
        (8, '<AE>', 'single-select', 'AE', 'AEDECOD', NULL),
        (8, '<YYYY-MM-DD>', 'single-select', 'AE', 'AESTDTC', NULL),
 
        (9, '<subject>', 'single-select', 'AE', 'USUBJID', NULL),
        (9, '<liver lab values>', 'multi-select', 'LB', 'LBTEST', 1),
        (9, '<AE>', 'single-select', 'AE', 'AEDECOD', NULL),
        (9, '<YYYY-MM-DD>', 'single-select', 'AE', 'AESTDTC', NULL),
        (9, '<YYYY-MM-DD>', 'auto-select', 'AE', 'AEENDTC', NULL),
 
        (10, '<subject>', 'single-select', 'AE', 'USUBJID', NULL),
        (10, '<liver lab values>', 'multi-select', 'LB', 'LBTEST', 1),
        (10, '<+/- dd>', 'text-field', 'NULL', 'NULL', NULL),
        (10, '<AE>', 'single-select', 'AE', 'AEDECOD', NULL),
        (10, '<YYYY-MM-DD>', 'single-select', 'AE', 'AESTDTC', NULL),
 
        (11, '<subject>', 'single-select', 'AE', 'USUBJID', NULL),
        (11, '<liver lab values>', 'single-select', 'LB', 'LBTEST', 1),
 
        (12, '<subject>', 'single-select', 'AE', 'USUBJID', NULL),
        (12, '<liver lab values>', 'multi-select', 'LB', 'LBTEST', 1); 
               
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('QueryPlaceholder')
    op.drop_table('PredefinedQuery')
    op.drop_table('LabAnalytes')
    op.drop_table('QueryCategory')
    op.drop_table('QueryModule')
    # ### end Alembic commands ###
