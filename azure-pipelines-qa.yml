trigger:
  branches:
    include:
      - main

parameters:
- name: environment
  displayName: Target Environment
  type: string
  default: prod
  values:
  - prod

variables:
- ${{ if eq(parameters.environment, 'prod') }}:
  - group: prod-key-vault-variablegrp

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Python Build Stage
    jobs:
      - job: PythonBuild
        displayName: Build Python Package
        steps:
          - script: |
              curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
              curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
              sudo apt-get update
              sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 unixodbc-dev
            displayName: "Install SQL Server ODBC Driver"

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.12'
            displayName: 'Use Python 3.12'

          - script: |
              python -m venv antenv
              source antenv/bin/activate
              pip install -r requirements.txt
            workingDirectory: $(System.DefaultWorkingDirectory)
            displayName: 'Install Python dependencies'

          - task: PowerShell@2
            displayName: 'Overwrite .env.production from Key Vault secrets'
            inputs:
              targetType: 'inline'
              script: |
                $envVars = @{
                  "AZURE_STORAGE_CONNECTION_STRING" = "$(azure-storage-connection-string)"
                  "AZURE_STORAGE_CONTAINER_NAME" = "$(azure-storage-container-name)"
                  "DATABASE_URL" = "$(database-url)"
                  "BASE_BLOB_PATH" = "$(base-blob-path)"
                  "AZURE_TENANT_ID" = "$(azure-tenant-id)"
                  "AZURE_CLIENT_ID" = "$(azure-client-id)"
                  "DATABASE_URL_FILES" = "$(database-url-files)"
                  "BASE_RAW_PATH" = "$(base-raw-path)"
                  "AZURE_OPENAI_API_KEY" = "$(azure-openai-api-key)"
                  "AZURE_OPENAI_ENDPOINT" = "$(azure-openai-endpoint)"
                  "OPENAI_API_VERSION" = "$(openai-api-version)"
                  "AZURE_OPENAI_DEPLOYMENT_NAME" = "$(azure-openai-deployment-name)"
                  "LLMProvider" = "$(llmprovider)"
                  "LANGSMITH_TRACING" = "$(langsmith-tracing)"
                  "LANGSMITH_ENDPOINT" = "$(langsmith-endpoint)"
                  "LANGSMITH_API_KEY" = "$(langsmith-api-key)"
                  "LANGSMITH_PROJECT" = "$(langsmith-project)"
                  "REDIS_URL" = "$(redis-url)"
                  "REDIS_CONFIG" = "$(redis-config)"
                }

                $envFileContent = $envVars.GetEnumerator() | ForEach-Object { "$($_.Key)=$($_.Value)" }
                $envFileContent | Out-File -FilePath .env -Encoding ascii

          - script: |
              echo "Running Alembic migration..."
              source antenv/bin/activate
              export $(grep -v '^#' .env | xargs)
              alembic upgrade head
            workingDirectory: $(System.DefaultWorkingDirectory)
            displayName: 'Run Alembic Migration'
